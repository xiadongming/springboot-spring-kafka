<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                    http://www.springframework.org/schema/beans/spring-beans.xsd ">

	<!-- 1.定义consumer的参数 -->
	<bean id="consumerProperties" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="bootstrap.servers" value="127.0.0.1:9092" />
				<entry key="group.id" value="consumerGroup" />
				<entry key="enable.auto.commit" value="true" />
				<entry key="auto.commit.interval.ms" value="1000" />
				<entry key="retry.backoff.ms" value="100" />
				<entry key="key.deserializer" value="org.apache.kafka.common.serialization.IntegerDeserializer" />
				<entry key="value.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer" />
			</map>
		</constructor-arg>
	</bean>
		 <bean id="consumerFactory" class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
			<constructor-arg>
				<ref bean="consumerProperties" />
			</constructor-arg>
		</bean> 


		<!--&lt;!&ndash; 3.定义消费实现类 &ndash;&gt; -->
		<bean id="kafkaConsumerService" class="com.itchina.kafka.kafkaservice.KafkaConsumerService" />

		<!-- 4.消费者容器配置信息 -->
		<bean id="containerProperties"
			class="org.springframework.kafka.listener.config.ContainerProperties">
			<!-- topic -->
			<constructor-arg name="topics" value="topic-test" />
			<property name="messageListener" ref="myMessageListener" />
		</bean>

		<!-- 5.消费者并发消息监听容器，执行doStart()方法 -->
		<bean id="messageListenerContainer"
			class="org.springframework.kafka.listener.KafkaMessageListenerContainer"
			init-method="doStart">
			<constructor-arg ref="consumerFactory" />
			<constructor-arg ref="containerProperties" />
		</bean>


</beans>
